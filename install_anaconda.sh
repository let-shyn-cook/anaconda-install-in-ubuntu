#!/bin/bash

# Colors for output formatting
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m'

# Ki·ªÉm tra quy·ªÅn th·ª±c thi
check_permissions() {
    if [ ! -w "$HOME" ]; then
        echo -e "\n${RED}‚ùå L·ªói: Kh√¥ng c√≥ quy·ªÅn ghi v√†o th∆∞ m·ª•c home${NC}"
        exit 1
    fi
    
    if [ ! -w "$HOME/.bashrc" ]; then
        echo -e "\n${RED}‚ùå L·ªói: Kh√¥ng c√≥ quy·ªÅn ghi v√†o file .bashrc${NC}"
        exit 1
    fi
}

check_dependencies() {
    local missing_deps=()
    
    # Ki·ªÉm tra wget
    if ! command -v wget &> /dev/null; then
        missing_deps+=("wget")
    fi
    
    # Ki·ªÉm tra xdg-open
    if ! command -v xdg-open &> /dev/null; then
        missing_deps+=("xdg-utils")
    fi
    
    # Ki·ªÉm tra sed
    if ! command -v sed &> /dev/null; then
        missing_deps+=("sed")
    fi
    
    # N·∫øu c√≥ dependency thi·∫øu
    if [ ${#missing_deps[@]} -ne 0 ]; then
        echo -e "\n${RED}‚ùå C√°c g√≥i ph·ª• thu·ªôc sau ch∆∞a ƒë∆∞·ª£c c√†i ƒë·∫∑t:${NC}"
        printf '%s\n' "${missing_deps[@]}"
        echo -e "\n${YELLOW}Vui l√≤ng c√†i ƒë·∫∑t b·∫±ng l·ªánh:${NC}"
        echo -e "sudo apt-get install ${missing_deps[*]}"
        exit 1
    fi
}

check_disk_space() {
    # Ki·ªÉm tra dung l∆∞·ª£ng tr·ªëng (t·ªëi thi·ªÉu 5GB)
    local required_space=5000000  # 5GB in KB
    local available_space=$(df "$HOME" | awk 'NR==2 {print $4}')
    
    if [ "$available_space" -lt "$required_space" ]; then
        echo -e "\n${RED}‚ùå L·ªói: Kh√¥ng ƒë·ªß dung l∆∞·ª£ng tr·ªëng${NC}"
        echo -e "C·∫ßn t·ªëi thi·ªÉu 5GB dung l∆∞·ª£ng tr·ªëng"
        echo -e "Dung l∆∞·ª£ng hi·ªán c√≥: $(($available_space/1024/1024))GB"
        exit 1
    fi
}

show_author_info() {
    clear
    local text="SHYN"
    local colors=("${RED}" "${GREEN}" "${YELLOW}" "${BLUE}" "${PURPLE}" "${CYAN}")
    local color_index=0
    local width=51
    local padding=$(( (width - ${#text}) / 2 ))
    
    # Animation ch·∫°y m√†u
    for ((i=0; i<20; i++)); do
        echo -e "\n\n\n"
        echo "                  ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
        echo "                  ‚ïë                                               ‚ïë"
        printf "                ‚ïë%${padding}s" ""
        
                                # In t·ª´ng ch·ªØ v·ªõi m√†u kh√°c nhau
                                for ((j=0; j<${#text}; j++)); do
                                    echo -en "${colors[$color_index]}${text:$j:1}${NC}"
                                    color_index=$(( (color_index + 1) % ${#colors[@]} ))
                                done    
        
        printf "%$((padding))s  ‚ïë\n" ""
        echo "                  ‚ïë                                               ‚ïë"
        echo "                  ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
        
        sleep 0.2
        clear
    done
    
    # Hi·ªÉn th·ªã cu·ªëi c√πng
    echo -e "\n\n\n"
    echo "                     ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
    echo "                     ‚ïë                                               ‚ïë"
    printf "                   ‚ïë%${padding}s${CYAN}${text}${NC}%$((padding))s  ‚ïë\n" "" ""
    echo "                     ‚ïë                                               ‚ïë"
    echo "                     ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
}

# Animation functions
show_spinner() {
    local pid=$1
    local delay=0.1
    local spinstr='|/-\'
    while [ "$(ps a | awk '{print $1}' | grep $pid)" ]; do
        local temp=${spinstr#?}
        printf " [%c]  " "$spinstr"
        local spinstr=$temp${spinstr%"$temp"}
        sleep $delay
        printf "\b\b\b\b\b\b"
    done
    printf "    \b\b\b\b"
}

show_progress() {
    local duration=$1
    local width=50
    local progress=0
    while [ $progress -le 100 ]; do
        local count=$(($width * $progress / 100))
        local spaces=$((width - count))
        
        printf "\r[${GREEN}"
        printf "%${count}s" "" | tr ' ' '‚ñà'
        printf "${NC}"
        printf "%${spaces}s" "" | tr ' ' '.'
        printf "] ${progress}%%"
        
        progress=$((progress + 2))
        sleep $duration
    done
    printf "\n"
}

show_loading() {
    local text=$1
    local chars="‚†ã‚†ô‚†π‚†∏‚†º‚†¥‚†¶‚†ß‚†á‚†è"
    for (( i=0; i<${#chars}; i++ )); do
        printf "\r${text} ${chars:$i:1}"
        sleep 0.1
    done
}

# Fancy banner
show_banner() {
    echo -e "${CYAN}"
    echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
    echo "‚ïë           ANACONDA INSTALLER              ‚ïë"
    echo "‚ïë                                           ‚ïë"
    echo "‚ïë            Create by SHYN                 ‚ïë"
    echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
    echo -e "${NC}"
}

# Function to display menu with animation
show_menu() {
    clear
    show_banner
    echo -e "${YELLOW}=== MENU CH√çNH ===${NC}"
    echo
    printf "${CYAN}‚≠ê${NC} 1. C√†i ƒë·∫∑t Anaconda\n"
    sleep 0.1
    printf "${CYAN}‚≠ê${NC} 2. G·ª° c√†i ƒë·∫∑t Anaconda\n"
    sleep 0.1
    printf "${CYAN}‚≠ê${NC} 3. Tho√°t\n"
    sleep 0.1
    echo
}

# Function to select Anaconda version with animation
select_anaconda_version() {
    echo -e "\n${YELLOW}=== CH·ªåN PHI√äN B·∫¢N ANACONDA ===${NC}\n"
    
    show_loading "ƒêang chu·∫©n b·ªã options"
    echo -e "\n"
    
    echo -e "${PURPLE}1.${NC} M·ªü tr√¨nh duy·ªát ƒë·ªÉ ch·ªçn phi√™n b·∫£n"
    echo -e "${PURPLE}2.${NC} Nh·∫≠p URL tr·ª±c ti·∫øp"
    
    read -p $'\n'"Ch·ªçn t√πy ch·ªçn (1-2): " version_choice

    case $version_choice in
        1)
            echo -e "\n${GREEN}ƒêang m·ªü tr√¨nh duy·ªát...${NC}"
            show_progress 0.03
            xdg-open "https://repo.anaconda.com/archive/"
            
            echo -e "\n${YELLOW}üìù H∆Ø·ªöNG D·∫™N CH·ªåN FILE:${NC}"
            echo "  ‚ñ∂Ô∏è T√¨m file: Anaconda3-YYYY.MM-Linux-x86_64.sh"
            echo "  ‚ñ∂Ô∏è Click chu·ªôt ph·∫£i ‚Üí Copy link address"
            echo "  ‚ñ∂Ô∏è D√°n link v√†o b√™n d∆∞·ªõi"
            ;;
        2)
            echo -e "\n${YELLOW}Nh·∫≠p URL tr·ª±c ti·∫øp:${NC}"
            ;;
        *)
            echo -e "\n${RED}‚ùå L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá${NC}"
            return 1
            ;;
    esac

    read -p $'\n'"üìé URL Anaconda: " anaconda_url
    echo $anaconda_url
    return 0
}

# Function to install Anaconda with animation
install_anaconda() {
    # Ki·ªÉm tra c√°c ƒëi·ªÅu ki·ªán tr∆∞·ªõc khi c√†i ƒë·∫∑t
    check_permissions
    check_dependencies
    check_disk_space
    
    echo -e "\n${GREEN}üöÄ B·∫Øt ƒë·∫ßu c√†i ƒë·∫∑t Anaconda...${NC}\n"
    
    # Hi·ªÉn th·ªã menu l·ª±a ch·ªçn phi√™n b·∫£n
    echo -e "\n${YELLOW}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
    echo -e "‚ïë   CH·ªåN PHI√äN B·∫¢N ANACONDA                     ‚ïë"
    echo -e "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}\n"  
    
    show_loading "ƒêang chu·∫©n b·ªã danh s√°ch phi√™n b·∫£n"
    
    echo -e "\n${CYAN}Vui l√≤ng ch·ªçn c√°ch t·∫£i Anaconda:${NC}"
    echo -e "\n${PURPLE}‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê${NC}"     #
    echo -e "${PURPLE}‚îÇ${NC} 1. M·ªü tr√¨nh duy·ªát ƒë·ªÉ ch·ªçn phi√™n b·∫£n ${PURPLE}              ‚îÇ${NC}"
    echo -e "${PURPLE}‚îÇ${NC} 2. Nh·∫≠p URL tr·ª±c ti·∫øp              ${PURPLE}               ‚îÇ${NC}"
    echo -e "${PURPLE}‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò${NC}"
    
    echo -e "\n"
    read -p "$(echo -e ${CYAN}Nh·∫≠p l·ª±a ch·ªçn c·ªßa b·∫°n [1-2]:${NC} )" version_choice
    
    case $version_choice in
        1)
            echo -e "\n${GREEN}‚è≥ ƒêang m·ªü tr√¨nh duy·ªát...${NC}"
            show_progress 0.03
            xdg-open "https://repo.anaconda.com/archive/"
            
            echo -e "\n${YELLOW}üìù H∆Ø·ªöNG D·∫™N CH·ªåN FILE:${NC}"
            echo -e "${CYAN}‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê${NC}"
            echo -e "${CYAN}‚îÇ${NC} ‚ñ∂Ô∏è  T√¨m file: Anaconda3-YYYY.MM-Linux-x86_64.sh"
            echo -e "${CYAN}‚îÇ${NC} ‚ñ∂Ô∏è  Click chu·ªôt ph·∫£i ‚Üí Copy link address"
            echo -e "${CYAN}‚îÇ${NC} ‚ñ∂Ô∏è  D√°n link v√†o b√™n d∆∞·ªõi"
            echo -e "${CYAN}‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò${NC}"
            ;;
        2)
            echo -e "\n${YELLOW}üìé Vui l√≤ng nh·∫≠p URL tr·ª±c ti·∫øp:${NC}"
            ;;
        *)
            echo -e "\n${RED}‚ùå L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá${NC}"
            return 1
            ;;
    esac

    read -p $'\n'"üìé URL Anaconda: " url
    if [ -z "$url" ]; then
        echo -e "\n${RED}‚ùå URL kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng${NC}"
        return 1
    fi
    
    # Ti·∫øp t·ª•c v·ªõi qu√° tr√¨nh c√†i ƒë·∫∑t
    echo -e "\n${CYAN}üìÇ T·∫°o th∆∞ m·ª•c t·∫°m...${NC}"
    mkdir -p ~/temp_anaconda
    cd ~/temp_anaconda
    
    echo -e "\n${CYAN}‚¨áÔ∏è  ƒêang t·∫£i Anaconda...${NC}"
    if ! wget -O anaconda.sh "$url" 2>&1; then
        echo -e "\n${RED}‚ùå L·ªói: Kh√¥ng th·ªÉ t·∫£i file t·ª´ URL ƒë√£ cho${NC}"
        echo -e "Vui l√≤ng ki·ªÉm tra l·∫°i URL v√† k·∫øt n·ªëi m·∫°ng"
        return 1
    fi
    
    echo -e "\n${CYAN}üîß ƒêang c√†i ƒë·∫∑t...${NC}"
    show_progress 0.05
    bash anaconda.sh -b -p $HOME/anaconda3
    
    echo -e "\n${CYAN}‚öôÔ∏è  C·∫•u h√¨nh PATH...${NC}"
    echo 'export PATH="$HOME/anaconda3/bin:$PATH"' >> ~/.bashrc
    
    echo -e "\n${CYAN}üßπ K√≠ch ho·∫°t Anaconda...${NC}"
    source ~/.bashrc
    source ~/anaconda3/bin/activate
    conda init bash
    
    echo -e "\n${CYAN}üßπ D·ªçn d·∫πp...${NC}"
    cd ~
    rm -rf ~/temp_anaconda
    
show_success() {
    echo -e "\n${GREEN}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
    echo -e "‚ïë         ‚úÖ C√ÄI ƒê·∫∂T HO√ÄN T·∫§T!                        ‚ïë"
    echo -e "‚ïë                                                     ‚ïë"
    echo -e "‚ïë    üéâ Anaconda ƒë√£ ƒë∆∞·ª£c k√≠ch ho·∫°t!                   ‚ïë"
    echo -e "‚ïë    üìù Ki·ªÉm tra b·∫±ng l·ªánh:                           ‚ïë"
    echo -e "‚ïë       conda --version                               ‚ïë"
    echo -e "‚ïë                                                     ‚ïë"
    echo -e "‚ïë    ‚ö° Kh·ªüi ƒë·ªông l·∫°i terminal ƒë·ªÉ                     ‚ïë"
    echo -e "‚ïë       ho√†n t·∫•t c·∫•u h√¨nh                             ‚ïë"
    echo -e "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}\n"
}
}

# Function to uninstall Anaconda with animation
uninstall_anaconda() {
    echo -e "\n${RED}üóëÔ∏è  B·∫Øt ƒë·∫ßu g·ª° c√†i ƒë·∫∑t Anaconda...${NC}\n"
    
    echo -e "${CYAN}ƒêang x√≥a th∆∞ m·ª•c Anaconda...${NC}"
    show_progress 0.03
    rm -rf ~/anaconda3
    
    echo -e "\n${CYAN}ƒêang x√≥a c·∫•u h√¨nh Anaconda...${NC}"
    show_progress 0.03
    
    # X√≥a ƒë∆∞·ªùng d·∫´n Anaconda trong .bashrc
    sed -i '/export PATH.*anaconda3/d' ~/.bashrc
    
    # X√≥a ph·∫ßn conda initialize
    sed -i '/# >>> conda initialize >>>/,/# <<< conda initialize <<</d' ~/.bashrc
    
    # X√≥a c√°c th∆∞ m·ª•c c·∫•u h√¨nh
    rm -rf ~/.conda
    rm -rf ~/.condarc
    
    # X√≥a c√°c bi·∫øn m√¥i tr∆∞·ªùng conda
    unset CONDA_EXE
    unset CONDA_PYTHON_EXE
    unset CONDA_SHLVL
    unset CONDA_PREFIX
    unset CONDA_DEFAULT_ENV
    unset CONDA_PROMPT_MODIFIER
    
    echo -e "\n${GREEN}‚úÖ G·ª° c√†i ƒë·∫∑t ho√†n t·∫•t! Vui l√≤ng kh·ªüi ƒë·ªông l·∫°i terminal.${NC}\n"
}   

# Initial display
clear
show_author_info
sleep 4
show_banner
sleep 0.5

# Main program loop
while true; do
    show_menu
    read -p "Nh·∫≠p l·ª±a ch·ªçn c·ªßa b·∫°n (1-3): " choice
    
    case $choice in
        1)
            install_anaconda
            read -p "Nh·∫•n Enter ƒë·ªÉ ti·∫øp t·ª•c..."
            ;;
        2)
            read -p $'\n'"‚ùì B·∫°n c√≥ ch·∫Øc mu·ªën g·ª° c√†i ƒë·∫∑t Anaconda? (y/n): " confirm
            if [ "$confirm" = "y" ]; then
                uninstall_anaconda
            fi
            read -p "Nh·∫•n Enter ƒë·ªÉ ti·∫øp t·ª•c..."
            ;;
        3)
            echo -e "\n${YELLOW}üëã T·∫°m bi·ªát...${NC}\n"
            exit 0
            ;;
        *)
            echo -e "\n${RED}‚ùå L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá. Vui l√≤ng th·ª≠ l·∫°i.${NC}"
            read -p "Nh·∫•n Enter ƒë·ªÉ ti·∫øp t·ª•c..."
            ;;
    esac
done 